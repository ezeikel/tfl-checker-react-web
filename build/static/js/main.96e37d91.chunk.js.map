{"version":3,"sources":["redux/reducers/journey.js","redux/reducers/suggestion.js","redux/reducers/index.js","redux/actionTypes.js","redux/store.js","GlobalStyle.js","components/Nav.js","components/Header.js","components/Footer.js","components/Card.js","components/Status.js","components/GooglePlacesInput.js","components/Mode.js","utils/renderOptions.js","components/TripSummary.js","utils/formatMoney.js","components/TripSummaries.js","redux/actions/suggestion.js","components/TripPlanner.js","redux/actions/journey.js","utils/addLeadingZero.js","utils/convertDateToTime.js","components/ToggleExpand.js","components/TripExpanded.js","components/TripMap.js","components/Trip.js","components/Main.js","components/App.js","index.js"],"names":["initialState","from","address","coordinates","lat","lng","to","loading","results","selected","combineReducers","journey","state","action","type","suggestion","journeys","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","thunk","createGlobalStyle","normalize","rotate","keyframes","Wrapper","styled","nav","NavList","ul","Nav","exact","header","Logo","section","Header","footer","Versions","ThisVersion","div","OtherVersions","Copyright","Footer","Name","props","id","Status","delays","Card","line","name","lineStatuses","filter","status","statusSeverity","length","map","statusSeverityDescription","Lines","useState","setStatus","useEffect","a","fetch","data","json","fetchData","key","Input","input","Loading","SuggestionsWrapper","Suggestion","active","PlacesByGoogle","List","GooglePlacesInput","inputId","placeholder","setAddress","setLocation","handleSelect","value","geocodeByAddress","getLatLng","latLng","onChange","onSelect","searchOptions","componentRestrictions","country","getInputProps","suggestions","getSuggestionItemProps","icon","color","size","description","defaultProps","convertModeToIcon","mode","console","error","Mode","leg","routeOptions","option","i","renderOptions","Legs","TotalFare","Duration","TripSummary","className","Object","keys","legs","fare","totalCost","Intl","NumberFormat","style","currency","format","duration","StyledTripSummary","connect","dispatch","onSetSelectedTrip","onClick","JourneyInput","Heading","span","FormWrapper","InputWrapper","StartEnd","VerticalLine","Leaving","Button","button","TripPlanner","fromCoordinates","toCoordinates","fromAddress","toAddress","onFetchSuggestions","onSetFromCoords","onSetToCoords","onSetFromAddress","onSetToAddress","onClearSuggestions","history","useHistory","query","URLSearchParams","useLocation","search","get","queryParamsFromCoords","parseFloat","split","queryParamsToCoords","queryParamsFromAddress","queryParamsToAddress","htmlFor","push","responseJSON","response","fetchSuggestion","dateString","date","Date","hours","getHours","minutes","getMinutes","addLeadingZero","ToggleExpand","legStops","legIndex","setLegs","updatedLegs","index","expanded","MODE_COLOURS","walking","bus","coach","overground","tube","tflrail","dlr","Leg","Content","Point","Stops","Stop","Direction","Summary","Toggle","ModeIcon","Trip","trip","departurePoint","commonName","convertDateToTime","departureTime","instruction","summary","path","stopPoints","steps","step","descriptionHeading","stopPoint","arrivalPoint","IconWrapper","TripMap","center","defaultCenter","defaultZoom","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","google","bounds","maps","LatLngBounds","Polyline","geodesic","strokeColor","strokeOpacity","strokeWeight","setMap","extend","fitBounds","handleGoogleMapApi","ContentWrap","StyledTripExpanded","TripExpanded","selectedTrip","onClearSelectedTrip","onClearJourney","lon","main","Main","library","add","fab","faWalking","faBicycle","faBus","faBusAlt","faTrain","faSubway","faTram","faShip","faMapMarkerAlt","faExclamationTriangle","faRoute","faSpinnerThird","faChevronRight","faCircle","Container","App","store","GlobalStyle","app","render","document","querySelector"],"mappings":"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","file":"static/js/main.96e37d91.chunk.js","sourcesContent":["import {\n  SET_FROM_COORDS,\n  SET_TO_COORDS,\n  SET_FROM_ADDRESS,\n  SET_TO_ADDRESS,\n  CLEAR_JOURNEY,\n} from \"../actionTypes\";\n\nconst initialState = {\n  from: {\n    address: \"\",\n    coordinates: {\n      lat: \"\",\n      lng: \"\",\n    },\n  },\n  to: {\n    address: \"\",\n    coordinates: {\n      lat: \"\",\n      lng: \"\",\n    },\n  },\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_FROM_COORDS: {\n      return {\n        ...state,\n        from: {\n          ...state.from,\n          coordinates: {\n            ...state.from.coordinates,\n            lat: action.lat,\n            lng: action.lng,\n          },\n        },\n      };\n    }\n    case SET_TO_COORDS: {\n      return {\n        ...state,\n        to: {\n          ...state.to,\n          coordinates: {\n            ...state.to.coordinates,\n            lat: action.lat,\n            lng: action.lng,\n          },\n        },\n      };\n    }\n    case CLEAR_JOURNEY: {\n      return {\n        ...initialState,\n      };\n    }\n    case SET_FROM_ADDRESS: {\n      return {\n        ...state,\n        from: {\n          ...state.from,\n          address: action.address,\n        },\n      };\n    }\n    case SET_TO_ADDRESS: {\n      return {\n        ...state,\n        to: {\n          ...state.to,\n          address: action.address,\n        },\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import {\n  FETCH_SUGGESTIONS_START,\n  FETCH_SUGGESTIONS_SUCCESS,\n  CLEAR_SUGGESTIONS,\n  SET_SELECTED_TRIP,\n  CLEAR_SELECTED_TRIP,\n} from \"../actionTypes\";\n\nconst initialState = {\n  loading: false,\n  results: [],\n  selected: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_SUGGESTIONS_START: {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case FETCH_SUGGESTIONS_SUCCESS: {\n      return {\n        ...state,\n        results: action.journeys,\n        loading: false,\n      };\n    }\n    case CLEAR_SUGGESTIONS: {\n      return {\n        ...state,\n        results: [],\n      };\n    }\n    case SET_SELECTED_TRIP: {\n      return {\n        ...state,\n        selected: action.selected,\n      };\n    }\n    case CLEAR_SELECTED_TRIP: {\n      return {\n        ...state,\n        selected: {},\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport journey from \"./journey\";\nimport suggestion from \"./suggestion\";\n\nexport default combineReducers({ journey, suggestion });\n","export const SET_FROM_COORDS = \"SET_FROM_COORDS\";\nexport const SET_TO_COORDS = \"SET_TO_COORDS\";\nexport const SET_FROM_ADDRESS = \"SET_FROM_ADDRESS\";\nexport const SET_TO_ADDRESS = \"SET_TO_ADDRESS\";\nexport const CLEAR_JOURNEY = \"CLEAR_JOURNEY\";\n\nexport const FETCH_SUGGESTIONS_START = \"FETCH_SUGGESTIONS_START\";\nexport const FETCH_SUGGESTIONS_SUCCESS = \"FETCH_SUGGESTIONS_SUCCESS\";\nexport const FETCH_SUGGESTIONS_FAIL = \"FETCH_SUGGESTIONS_FAIL\";\nexport const CLEAR_SUGGESTIONS = \"CLEAR_SUGGESTIONS\";\n\nexport const SET_SELECTED_TRIP = \"SET_SELECTED_TRIP\";\nexport const CLEAR_SELECTED_TRIP = \"CLEAR_SELECTED_TRIP\";\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk)),\n);\n","import { createGlobalStyle, keyframes } from \"styled-components\";\nimport { normalize } from \"styled-normalize\";\n\nexport default createGlobalStyle`\n  ${normalize}\n\n  :root {\n    /*Colors */\n    --color-bakerloo: #874E29;\n    --color-central: #D82928;\n    --color-circle: #FECC2F;\n    --color-district: #17712D;\n    --color-dlr: #26AFAC;\n    --color-hammersmith-city: #D59AAF;\n    --color-jubilee: #6B7278;\n    --color-london-overground: #E46B24;\n    --color-metropolitan: #731756;\n    --color-northern: #000000;\n    --color-piccadilly: #0026A5;\n    --color-tfl-rail: #0026A5;\n    --color-tram: #6FC926;\n    --color-victoria: #1EA2E0;\n    --color-waterloo-city: #7DCFBD;\n\n    --color-text: #4D4D4D;\n    --color-background: #00BCD4;\n    --color-white: #FFFFFF;\n    --color-delay-background: #FAF5E2;\n    --color-delay-text: #2672AE;\n\n    --color-green: #31CC71;\n    --color-input-background: #F6F6F4;\n    --color-text-grey: #AEB8C3;\n\n    /* Spacing */\n    --spacing-tiny: 4px;\n    --spacing-small: 8px;\n    --spacing-medium: 16px;\n    --spacing-large: 32px;\n    --spacing-huge: 64px;\n\n    /* Font */\n    --primary-font-family: 'omnes-pro', sans-serif;\n    --default-font-size: 10px;\n    --font-size-alpha: 1.4rem;\n    --font-size-bravo: 1.6rem;\n    --font-size-charlie: 1.8rem;\n    --font-size-delta: 2rem;\n    --font-size-echo: 2.4rem;\n    --font-size-foxtrot: 3rem;\n    --font-size-golf: 3.6rem;\n    --font-size-hotel: 4.8rem;\n    --font-size-india: 6rem;\n    --font-size-juliet: 7.2rem;\n\n    --box-shadow: 0 3px 6px rgba(0,0,0, 0.16);\n\n    --border-radius: 4px;\n\n    --line-height: 1.5;\n  }\n\n  * {\n    box-sizing: border-box;\n  }\n\n  html {\n    font-size: var(--default-font-size);\n  }\n\n  body {\n    padding: 0;\n    margin: 0;\n    font-family: var(--primary-font-family);\n    color: var(--color-text);\n    line-height: 1.5;\n  }\n\n  img {\n    max-width: 100%;\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  ul {\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n  }\n\n  button {\n    outline: none;\n    appearance: none;\n    -webkit-appearance: none;\n    border: none;\n    cursor: pointer;\n  }\n\n  hr {\n    border: 0;\n  }\n\n  ::-moz-selection {\n    background-color: var(--color-background);\n    color: var(--color-white);\n  }\n\n  ::selection {\n    background: var(--color-background);\n    color: var(--color-white);\n  }\n\n  ::-webkit-input-placeholder {\n    /* Chrome/Opera/Safari */\n    color: var(--color-light-grey);\n    /*font-weight: 300;*/\n  }\n\n  ::-moz-placeholder {\n    /* Firefox 19+ */\n    color: var(--color-light-grey);\n    font-weight: 300;\n  }\n\n  ::-ms-input-placeholder {\n    /* IE 10+ */\n    color: var(--color-light-grey);\n    font-weight: 300;\n  }\n\n  ::-moz-placeholder {\n    /* Firefox 18- */\n    color: var(--color-light-grey);\n    font-weight: 300;\n  }\n\n  /* Hide fonts until webfonts have loaded to avoid FOUT */\n  .wf-loading {\n    visibility: hidden;\n  }\n`;\n\nexport const rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.nav`\n  display: flex;\n  align-items: center;\n`;\n\nconst NavList = styled.ul`\n  display: flex;\n  height: 100%;\n  li {\n    display: flex;\n    font-size: 22px;\n    font-weight: bold;\n    a {\n      position: relative;\n      color: var(--color-white);\n      overflow-x: hidden;\n      &:after {\n        content: \"\";\n        display: block;\n        height: 3px;\n        background-color: var(--color-white);\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        width: 40%;\n        transition: transform 0.3s ease-in-out;\n        transform: translateX(-150%);\n      }\n      &.active {\n        &:after {\n          transform: translateX(0);\n        }\n      }\n    }\n  }\n  li + li {\n    margin-left: var(--spacing-large);\n  }\n`;\n\nconst Nav = () => {\n  return (\n    <Wrapper>\n      <NavList>\n        <li>\n          <NavLink to=\"/\" exact>\n            Status updates\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/trip-planner\" exact>\n            Plan a journey\n          </NavLink>\n        </li>\n      </NavList>\n    </Wrapper>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Nav from \"./Nav\";\n\nconst Wrapper = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n  margin-bottom: 56px;\n  padding: var(--spacing-large);\n`;\n\nconst Logo = styled.section`\n  font-size: 32px;\n  font-weight: bold;\n  a {\n    color: var(--color-white);\n  }\n`;\n\nconst Header = () => {\n  return (\n    <Wrapper>\n      <Logo>\n        <Link to=\"/\">TfL Checker</Link>\n      </Logo>\n      <Nav />\n    </Wrapper>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.footer`\n  display: flex;\n  flex-direction: column;\n  background-color: #4a4a4a;\n  padding: var(--spacing-large);\n`;\n\nconst Logo = styled.section`\n  font-size: 32px;\n  font-weight: bold;\n  margin-bottom: 64px;\n  a {\n    color: var(--color-white);\n  }\n`;\n\nconst Versions = styled.section`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ThisVersion = styled.div`\n  display: flex;\n  flex-direction: column;\n  color: var(--color-white);\n  margin-bottom: 32px;\n  span {\n    &:first-of-type {\n      font-size: 2rem;\n      font-weight: bold;\n      margin-bottom: 16px;\n    }\n    &:last-of-type {\n      font-size: 1.6rem;\n    }\n  }\n`;\n\nconst OtherVersions = styled.div`\n  display: flex;\n  flex-direction: column;\n  color: var(--color-white);\n  margin-bottom: 128px;\n  span {\n    font-size: 2rem;\n    font-weight: bold;\n    color: #28bcd4;\n    margin-bottom: 16px;\n  }\n  ul {\n    display: flex;\n    font-size: 1.6rem;\n    li + li {\n      margin-left: 32px;\n    }\n  }\n`;\n\nconst Copyright = styled.section`\n  display: flex;\n  justify-content: space-between;\n  font-size: 1.4rem;\n  color: var(--color-white);\n  > div {\n    &:last-of-type {\n      span {\n        &:first-of-type {\n          color: #e34f42;\n        }\n        &:last-of-type {\n          font-weight: bold;\n        }\n      }\n    }\n  }\n`;\n\nconst Footer = () => {\n  return (\n    <Wrapper>\n      <Logo>\n        <Link to=\"/\">TfL Checker</Link>\n      </Logo>\n      <Versions>\n        <ThisVersion>\n          <span>This website was built using</span>\n          <span>React</span>\n        </ThisVersion>\n        <OtherVersions>\n          <span>I also made versions using</span>\n          <ul>\n            <li>Vanilla JavaScript (no framework)</li>\n            <li>Angular</li>\n            <li>Vue</li>\n            <li>Svelte</li>\n            <li>AngularJS</li>\n            <li>BackboneJS</li>\n          </ul>\n        </OtherVersions>\n      </Versions>\n      <Copyright>\n        <div>&copy; TfL Checker. All rights reserved.</div>\n        <div>\n          Made with <span>♡</span> in <span>South London</span>\n        </div>\n      </Copyright>\n    </Wrapper>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n  height: 300px;\n  box-shadow: var(--box-shadow);\n  border-radius: var(--border-radius);\n`;\n\nconst Name = styled.div`\n  flex: 0 0 50%;\n  background-color: ${props => `var(--color-${props.id})`};\n  color: var(--color-white);\n  display: flex;\n  align-content: center;\n  justify-content: center;\n  border-top-left-radius: var(--border-radius);\n  border-top-right-radius: var(--border-radius);\n  font-size: 24px;\n  font-weight: bold;\n  display: flex;\n  align-items: center;\n`;\n\nconst Status = styled.div`\n  flex: 0 0 50%;\n  background-color: var(--color-white);\n  background-color: ${props =>\n    `var(--color-${props.delays ? \"delay-background\" : \"white\"})`};\n  color: ${props => `var(--color-${props.delays ? \"delay-text\" : \"black\"})`};\n  border-bottom-left-radius: var(--border-radius);\n  border-bottom-right-radius: var(--border-radius);\n  font-size: 24px;\n  font-weight: bold;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Card = ({ line }) => (\n  <Wrapper>\n    <Name id={line.id}>{line.name}</Name>\n    <Status\n      delays={\n        line.lineStatuses.filter(status => status.statusSeverity === 9).length >\n        0\n      }\n    >\n      {line.lineStatuses.map(status => status.statusSeverityDescription)}\n    </Status>\n  </Wrapper>\n);\n\nCard.propTypes = {\n  line: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    lineStatuses: PropTypes.array,\n  }).isRequired,\n};\n\nexport default Card;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Card from \"./Card\";\n\nconst Lines = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  grid-gap: 32px;\n  justify-content: space-between;\n  background-color: var(--color-white);\n  padding: 32px;\n  border-radius: 4px;\n`;\n\nconst Status = () => {\n  const [status, setStatus] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const data = await fetch(\n        \"https://api.tfl.gov.uk/line/mode/tube,overground,dlr,tflrail/status?app_id=1b83c22c&app_key=e5c7b582d0f72a04add248393e939cf5\",\n      );\n      const json = await data.json();\n\n      setStatus(json);\n    }\n    fetchData();\n  }, []);\n\n  const renderLines = () =>\n    status.map(line => <Card key={line.id} line={line} />);\n\n  return <Lines>{renderLines()}</Lines>;\n};\n\nexport default Status;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from \"react-places-autocomplete\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { rotate } from \"../GlobalStyle\";\n\nconst Input = styled.input`\n  font-size: 1.6rem;\n  width: 100%;\n  outline: none;\n  border: 0;\n  background-color: transparent;\n  font-weight: bold;\n  ::-webkit-input-placeholder {\n    /* Edge */\n    color: #aeb8c3;\n    font-weight: bold;\n  }\n\n  :-ms-input-placeholder {\n    /* Internet Explorer 10-11 */\n    color: #aeb8c3;\n    font-weight: bold;\n  }\n\n  ::placeholder {\n    color: #aeb8c3;\n    font-weight: bold;\n  }\n`;\n\nconst Loading = styled.div`\n  display: flex;\n  padding: 8px 0;\n  animation: ${rotate} 1.2s linear infinite;\n  align-self: flex-start;\n`;\n\nconst SuggestionsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  [aria-expanded=\"true\"] + & {\n    margin-top: 8px;\n  }\n`;\n\nconst Suggestion = styled.div`\n  font-family: var(--primary-font-family);\n  font-size: 1.6rem;\n  background-color: ${props =>\n    `var(--color-${props.active ? \"background\" : \"white\"})`};\n  color: ${props => `var(--color-${props.active ? \"white\" : \"black\"})`};\n  cursor: pointer;\n  padding: 8px;\n`;\n\nconst PlacesByGoogle = styled.div`\n  font-size: 11px;\n  background-color: white;\n  padding: 8px;\n  display: none;\n  &:not(:only-child) {\n    display: block;\n  }\n`;\n\nconst List = styled.div`\n  > div {\n    & + div {\n      border-top: 1px solid #eeeeee;\n    }\n  }\n`;\n\nconst GooglePlacesInput = ({\n  inputId,\n  placeholder,\n  address,\n  setAddress,\n  setLocation,\n}) => {\n  const handleSelect = async value => {\n    const [results] = await geocodeByAddress(value);\n    const latLng = await getLatLng(results);\n\n    setAddress(value);\n    setLocation(latLng);\n  };\n\n  const searchOptions = {\n    componentRestrictions: { country: [\"gb\"] },\n  };\n\n  return (\n    <PlacesAutocomplete\n      value={address}\n      onChange={setAddress}\n      onSelect={handleSelect}\n      searchOptions={searchOptions}\n    >\n      {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n        <>\n          <Input\n            // eslint-disable-next-line react/jsx-props-no-spreading\n            {...getInputProps({\n              inputId,\n              placeholder,\n            })}\n          />\n          <SuggestionsWrapper>\n            {loading ? (\n              <Loading>\n                <FontAwesomeIcon\n                  icon={[\"fad\", \"spinner-third\"]}\n                  color=\"var(--color-background)\"\n                  size=\"2x\"\n                />\n              </Loading>\n            ) : null}\n            <List>\n              {suggestions.map(suggestion => {\n                return (\n                  <Suggestion\n                    active={suggestion.active}\n                    // eslint-disable-next-line react/jsx-props-no-spreading\n                    {...getSuggestionItemProps(suggestion)}\n                  >\n                    {suggestion.description}\n                  </Suggestion>\n                );\n              })}\n              <PlacesByGoogle>\n                Places by <strong>Google</strong>\n              </PlacesByGoogle>\n            </List>\n          </SuggestionsWrapper>\n        </>\n      )}\n    </PlacesAutocomplete>\n  );\n};\n\nGooglePlacesInput.defaultProps = {\n  address: \"\",\n};\n\nGooglePlacesInput.propTypes = {\n  inputId: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  address: PropTypes.string,\n  setAddress: PropTypes.func.isRequired,\n  setLocation: PropTypes.func.isRequired,\n};\n\nexport default GooglePlacesInput;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport renderOptions from \"../utils/renderOptions\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  border: 1px solid #d9d9d9;\n  padding: 8px;\n  border-radius: 4px;\n  font-size: 1.4rem;\n  font-weight: bold;\n  span {\n    margin-left: 8px;\n  }\n`;\n\nconst convertModeToIcon = mode => {\n  const icon = {};\n\n  switch (mode) {\n    case \"walking\":\n      icon.name = \"walking\";\n      icon.color = \"#34495E\";\n      break;\n    case \"bus\":\n    case \"replacement-bus\":\n      icon.name = \"bus\";\n      icon.color = \"#C83638\";\n      break;\n    case \"coach\":\n      icon.name = \"bus-alt\";\n      icon.color = \"#10bd59\";\n      break;\n    case \"tube\":\n      icon.name = \"subway\";\n      icon.color = \"#34495E\";\n      break;\n    case \"national-rail\":\n      icon.name = \"train\";\n      icon.color = \"#34495E\";\n      break;\n    case \"overground\":\n      icon.name = \"train\";\n      icon.color = \"#E46B24\";\n      break;\n    case \"tflrail\":\n      icon.name = \"train\";\n      icon.color = \"#0026A5\";\n      break;\n    case \"dlr\":\n      icon.name = \"tram\";\n      icon.color = \"#26AFAC\";\n      break;\n    default:\n      console.error(\"Mode icon not found.\");\n  }\n\n  return icon;\n};\n\nconst Mode = ({\n  leg: {\n    routeOptions,\n    mode: { id },\n  },\n}) => (\n  <Wrapper>\n    <FontAwesomeIcon\n      icon={[\"fad\", convertModeToIcon(id).name]}\n      color={convertModeToIcon(id).color}\n      size=\"lg\"\n    />\n    {renderOptions(routeOptions)}\n  </Wrapper>\n);\n\nMode.propTypes = {\n  leg: PropTypes.shape({\n    mode: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n    routeOptions: PropTypes.arrayOf(PropTypes.shape({})),\n  }).isRequired,\n};\n\nexport default Mode;\n","import React from \"react\";\n\nexport default routeOptions =>\n  routeOptions.map((option, i) => (\n    // eslint-disable-next-line react/no-array-index-key\n    <span key={i}>\n      {option.name}\n      {i < routeOptions.length - 1 ? <span>/</span> : \"\"}\n    </span>\n  ));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport formatMoney from \"../utils/formatMoney\";\nimport Mode from \"./Mode\";\n\nconst Wrapper = styled.section`\n  flex: 0 0 auto;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 32px;\n  background-color: #fff;\n  border-radius: 4px;\n  .timing {\n    display: flex;\n    justify-content: space-between;\n  }\n`;\n\nconst Legs = styled.div`\n  flex: 1 0 auto;\n  display: flex;\n  align-items: center;\n  > div {\n    & + div {\n      margin-left: 16px;\n    }\n  }\n`;\n\nconst TotalFare = styled.div`\n  flex: 0 0 auto;\n  display: flex;\n  font-size: 16px;\n  font-weight: bold;\n  color: #31cc71;\n  margin-right: 32px;\n`;\n\nconst Duration = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  span {\n    &:first-of-type {\n      font-size: 2.4rem;\n      font-weight: bold;\n    }\n    &:last-of-type {\n      font-size: 1.6rem;\n    }\n  }\n`;\n\nconst TripSummary = ({ journey, className }) => {\n  if (Object.keys(journey).length === 0) return null;\n\n  return (\n    <Wrapper className={className}>\n      <Legs>\n        {journey.legs.map((leg, i) => (\n          <Mode\n            key={i} // eslint-disable-line react/no-array-index-key\n            leg={leg}\n          />\n        ))}\n      </Legs>\n      <TotalFare>\n        {formatMoney(journey.fare ? journey.fare.totalCost : 0)}\n      </TotalFare>\n      <Duration>\n        <span>{journey.duration}</span>\n        <span>min</span>\n      </Duration>\n    </Wrapper>\n  );\n};\n\nTripSummary.propTypes = {\n  className: PropTypes.string.isRequired,\n  journey: PropTypes.shape({\n    fare: PropTypes.shape({\n      totalCost: PropTypes.number,\n    }),\n    duration: PropTypes.number,\n    legs: PropTypes.arrayOf(PropTypes.shape({})),\n  }).isRequired,\n};\n\nexport default TripSummary;\n","export default value =>\n  new Intl.NumberFormat(\"en-GB\", { style: \"currency\", currency: \"GBP\" }).format(\n    value / 100,\n  );\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport TripSummary from \"./TripSummary\";\nimport { setSelectedTrip } from \"../redux/actions\";\n\nconst Wrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n  margin-top: var(--spacing-huge);\n  > span {\n    &:first-of-type {\n      font-size: 2.4rem;\n      margin-bottom: 32px;\n      font-weight: bold;\n      color: var(--color-white);\n    }\n  }\n  a {\n    display: flex;\n    width: 100%;\n    align-items: center;\n    color: var(--color-text);\n    &:first-of-type {\n      border-top-left-radius: 4px;\n      border-top-right-radius: 4px;\n      section {\n        border-top-left-radius: 4px;\n        border-top-right-radius: 4px;\n      }\n    }\n    &:last-of-type {\n      border-bottom-left-radius: 4px;\n      border-bottom-right-radius: 4px;\n      section {\n        border-bottom-left-radius: 4px;\n        border-bottom-right-radius: 4px;\n      }\n    }\n    & + a {\n      border-top: 1px solid #eeeeee;\n    }\n  }\n`;\n\nconst StyledTripSummary = styled(TripSummary)`\n  border-radius: 0;\n  &:hover {\n    background-color: #f2f2f2;\n    cursor: pointer;\n  }\n`;\n\nconst TripSummaries = ({ journeys, onSetSelectedTrip }) => (\n  <Wrapper>\n    <span>Suggested</span>\n    {journeys.map((journey, i) => (\n      // eslint-disable-next-line react/no-array-index-key\n      <Link to=\"/trip\" onClick={() => onSetSelectedTrip(journey)} key={i}>\n        <StyledTripSummary journey={journey} />\n      </Link>\n    ))}\n  </Wrapper>\n);\n\nconst mapDispatchToProps = dispatch => ({\n  onSetSelectedTrip: value => dispatch(setSelectedTrip(value)),\n});\n\nTripSummaries.propTypes = {\n  journeys: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  onSetSelectedTrip: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(TripSummaries);\n","import {\n  FETCH_SUGGESTIONS_START,\n  FETCH_SUGGESTIONS_SUCCESS,\n  CLEAR_SUGGESTIONS,\n  SET_SELECTED_TRIP,\n  CLEAR_SELECTED_TRIP,\n} from \"../actionTypes\";\n\nconst API_ENDPOINT = \"https://api.tfl.gov.uk/\";\n\nexport const fetchSuggestionStart = () => ({\n  type: FETCH_SUGGESTIONS_START,\n});\n\nexport const fetchSuggestionSuccess = ({ journeys }) => ({\n  type: FETCH_SUGGESTIONS_SUCCESS,\n  journeys,\n});\n\nexport const fetchSuggestion = (\n  fromCoordinates,\n  toCoordinates,\n) => async dispatch => {\n  dispatch(fetchSuggestionStart());\n\n  const responseJSON = await fetch(\n    `${API_ENDPOINT}journey/journeyresults/${fromCoordinates.lat},${fromCoordinates.lng}/to/${toCoordinates.lat},${toCoordinates.lng}?app_id=1b83c22c&app_key=e5c7b582d0f72a04add248393e939cf5`,\n  );\n  const response = await responseJSON.json();\n\n  dispatch(fetchSuggestionSuccess(response));\n};\n\nexport const clearSuggestions = () => ({\n  type: CLEAR_SUGGESTIONS,\n});\n\nexport const setSelectedTrip = selected => ({\n  type: SET_SELECTED_TRIP,\n  selected,\n});\n\nexport const clearSelectedTrip = () => ({\n  type: CLEAR_SELECTED_TRIP,\n});\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  fetchSuggestion,\n  setFromCoords,\n  setToCoords,\n  setFromAddress,\n  setToAddress,\n  clearSuggestions,\n} from \"../redux/actions\";\nimport GooglePlacesInput from \"./GooglePlacesInput\";\nimport TripSummaries from \"./TripSummaries\";\nimport { rotate } from \"../GlobalStyle\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst JourneyInput = styled.section`\n  display: flex;\n  flex-direction: column;\n  padding: 32px;\n  background-color: var(--color-white);\n  border-radius: var(--border-radius);\n  max-width: 600px;\n\n  hr {\n    background-color: #aeb8c3;\n    height: 1px;\n    margin: 16px 0;\n  }\n`;\n\nconst Heading = styled.span`\n  display: flex;\n  color: var(--color-black);\n  margin-bottom: 32px;\n  font-size: 2.4rem;\n  font-weight: bold;\n`;\n\nconst FormWrapper = styled.div`\n  background-color: var(--color-input-background);\n  padding: 16px;\n  margin-bottom: 32px;\n  display: flex;\n  border-radius: 4px;\n  form {\n    flex: 1 0 auto;\n  }\n`;\n\nconst InputWrapper = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  label {\n    font-size: 1.4rem;\n    margin-bottom: 8px;\n    color: #aeb8c3;\n  }\n`;\n\nconst StartEnd = styled.span`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-right: 16px;\n  > svg {\n    flex: 0 0 auto;\n  }\n`;\n\nconst VerticalLine = styled.span`\n  flex: 1 0 auto;\n  background-color: #aeb8c3;\n  width: 1px;\n`;\n\nconst Leaving = styled.span`\n  display: flex;\n  align-items: center;\n  font-size: 1.6rem;\n  margin-bottom: 32px;\n  svg {\n    width: 10px;\n    height: 18px;\n    margin-left: 8px;\n  }\n`;\n\nconst Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-green);\n  color: var(--color-white);\n  font-size: var(--font-size-bravo);\n  font-weight: bold;\n  padding: 16px 0;\n  border-radius: var(--border-radius);\n  svg {\n    margin-left: 16px;\n    animation: ${rotate} 1.2s linear infinite;\n  }\n`;\n\nconst useQuery = () => new URLSearchParams(useLocation().search);\n\nconst TripPlanner = ({\n  fromCoordinates,\n  toCoordinates,\n  fromAddress,\n  toAddress,\n  loading,\n  results,\n  onFetchSuggestions,\n  onSetFromCoords,\n  onSetToCoords,\n  onSetFromAddress,\n  onSetToAddress,\n  onClearSuggestions,\n}) => {\n  const history = useHistory();\n  const query = useQuery();\n\n  useEffect(() => {\n    if (\n      fromAddress === \"\" &&\n      toAddress === \"\" &&\n      query.get(\"toCoordinates\") &&\n      query.get(\"fromCoordinates\")\n    ) {\n      const queryParamsFromCoords = {\n        lat: parseFloat(query.get(\"fromCoordinates\").split(\",\")[0]),\n        lng: parseFloat(query.get(\"fromCoordinates\").split(\",\")[1]),\n      };\n      const queryParamsToCoords = {\n        lat: parseFloat(query.get(\"toCoordinates\").split(\",\")[0]),\n        lng: parseFloat(query.get(\"toCoordinates\").split(\",\")[1]),\n      };\n      const queryParamsFromAddress = query.get(\"fromAddress\");\n      const queryParamsToAddress = query.get(\"toAddress\");\n\n      onFetchSuggestions(queryParamsFromCoords, queryParamsToCoords);\n      onSetFromCoords(queryParamsFromCoords);\n      onSetToCoords(queryParamsToCoords);\n      onSetFromAddress(queryParamsFromAddress);\n      onSetToAddress(queryParamsToAddress);\n    }\n  }, [\n    fromAddress,\n    onFetchSuggestions,\n    onSetFromAddress,\n    onSetFromCoords,\n    onSetToAddress,\n    onSetToCoords,\n    query,\n    toAddress,\n  ]);\n\n  useEffect(() => {\n    return () => {\n      onClearSuggestions();\n    };\n  }, [onClearSuggestions]);\n\n  const handleSubmit = () => {\n    history.push(\n      `/trip-planner?fromCoordinates=${fromCoordinates.lat},${fromCoordinates.lng}&toCoordinates=${toCoordinates.lat},${toCoordinates.lng}&fromAddress=${fromAddress}&toAddress=${toAddress}`,\n    );\n    onFetchSuggestions(fromCoordinates, toCoordinates);\n  };\n\n  return (\n    <Wrapper>\n      <JourneyInput>\n        <Heading>Let&apos;s take a trip!</Heading>\n        <FormWrapper>\n          <StartEnd>\n            <FontAwesomeIcon\n              icon={[\"fad\", \"circle\"]}\n              color=\"var(--color-green)\"\n              size=\"2x\"\n            />\n            <VerticalLine />\n            <FontAwesomeIcon\n              icon={[\"fad\", \"circle\"]}\n              color=\"var(--color-background)\"\n              size=\"2x\"\n            />\n          </StartEnd>\n          <form>\n            <InputWrapper>\n              {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n              <label htmlFor=\"fromAddress\">From</label>{\" \"}\n              <GooglePlacesInput\n                inputId=\"fromAddress\"\n                setLocation={onSetFromCoords}\n                address={fromAddress}\n                setAddress={onSetFromAddress}\n                placeholder=\"Where are you coming from?\"\n              />\n            </InputWrapper>\n            <hr />\n            <InputWrapper>\n              {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n              <label htmlFor=\"toAddress\">To</label>\n              <GooglePlacesInput\n                inputId=\"toAddress\"\n                setLocation={onSetToCoords}\n                address={toAddress}\n                setAddress={onSetToAddress}\n                placeholder=\"Where are you going to?\"\n              />\n            </InputWrapper>\n          </form>\n        </FormWrapper>\n        <Leaving>\n          Leaving now\n          <FontAwesomeIcon\n            icon={[\"fad\", \"chevron-right\"]}\n            color=\"var(--color-background)\"\n            size=\"2x\"\n          />\n        </Leaving>\n        <Button onClick={handleSubmit}>\n          {`Search${loading ? \"ing\" : \"\"}`}\n          {loading && (\n            <FontAwesomeIcon\n              icon={[\"fad\", \"spinner-third\"]}\n              color=\"var(--color-white)\"\n              size=\"lg\"\n            />\n          )}\n        </Button>\n      </JourneyInput>\n      {// TODO: Disambiguations cause results to be null. Add a way to get exact location instead\n      results && results.length ? <TripSummaries journeys={results} /> : null}\n    </Wrapper>\n  );\n};\n\nconst mapStateToProps = ({ journey, suggestion }) => ({\n  fromCoordinates: journey.from.coordinates,\n  fromAddress: journey.from.address,\n  toCoordinates: journey.to.coordinates,\n  toAddress: journey.to.address,\n  results: suggestion.results,\n  loading: suggestion.loading,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onFetchSuggestions: (fromCoordinates, toCoordinates) =>\n    dispatch(fetchSuggestion(fromCoordinates, toCoordinates)),\n  onSetFromCoords: value => dispatch(setFromCoords(value)),\n  onSetToCoords: value => dispatch(setToCoords(value)),\n  onSetFromAddress: value => dispatch(setFromAddress(value)),\n  onSetToAddress: value => dispatch(setToAddress(value)),\n  onClearSuggestions: () => dispatch(clearSuggestions()),\n});\n\nTripPlanner.defaultProps = {\n  fromCoordinates: {},\n  toCoordinates: {},\n  fromAddress: \"\",\n  toAddress: \"\",\n  results: [],\n  loading: false,\n};\n\nTripPlanner.propTypes = {\n  // TODO: Make sure lat/lng are one type: number\n  fromCoordinates: PropTypes.shape({\n    lat: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    lng: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  }),\n  // TODO: Make sure lat/lng are one type: number\n  toCoordinates: PropTypes.shape({\n    lat: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    lng: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  }),\n  fromAddress: PropTypes.string,\n  toAddress: PropTypes.string,\n  results: PropTypes.arrayOf(\n    PropTypes.shape({\n      $type: PropTypes.string,\n      startDateTime: PropTypes.string,\n      duration: PropTypes.number,\n      arrivalTime: PropTypes.string,\n    }),\n  ),\n  loading: PropTypes.bool,\n  onFetchSuggestions: PropTypes.func.isRequired,\n  onSetFromCoords: PropTypes.func.isRequired,\n  onSetToCoords: PropTypes.func.isRequired,\n  onSetFromAddress: PropTypes.func.isRequired,\n  onSetToAddress: PropTypes.func.isRequired,\n  onClearSuggestions: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TripPlanner);\n","import {\n  SET_FROM_COORDS,\n  SET_TO_COORDS,\n  SET_FROM_ADDRESS,\n  SET_TO_ADDRESS,\n  CLEAR_JOURNEY,\n} from \"../actionTypes\";\n\nexport const setFromCoords = ({ lat, lng }) => ({\n  type: SET_FROM_COORDS,\n  lat,\n  lng,\n});\n\nexport const setToCoords = ({ lat, lng }) => ({\n  type: SET_TO_COORDS,\n  lat,\n  lng,\n});\n\nexport const setFromAddress = address => ({\n  type: SET_FROM_ADDRESS,\n  address,\n});\n\nexport const setToAddress = address => ({\n  type: SET_TO_ADDRESS,\n  address,\n});\n\nexport const clearJourney = () => ({\n  type: CLEAR_JOURNEY,\n});\n","export default value => (value < 10 ? `0${value}` : value);\n","import addLeadingZero from \"./addLeadingZero\";\n\nexport default dateString => {\n  const date = new Date(dateString);\n  const hours = date.getHours();\n  const minutes = date.getMinutes();\n\n  return `${addLeadingZero(hours)}:${addLeadingZero(minutes)}`;\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.span`\n  color: #28bcd4;\n  cursor: pointer;\n`;\n\nconst ToggleExpand = ({ legStops, legIndex, setLegs }) => (\n  <Wrapper\n    onClick={() => {\n      const updatedLegs = legStops.map(({ expanded }, index) => ({\n        expanded: legIndex === index ? !expanded : expanded,\n      }));\n      setLegs(updatedLegs);\n    }}\n  />\n);\n\nToggleExpand.propTypes = {\n  legIndex: PropTypes.number.isRequired,\n  legStops: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  setLegs: PropTypes.func.isRequired,\n};\n\nexport default ToggleExpand;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport convertDateToTime from \"../utils/convertDateToTime\";\nimport ToggleExpand from \"./ToggleExpand\";\n\nconst MODE_COLOURS = {\n  walking: {\n    icon: \"walking\",\n    color: \"#4D4D4D\",\n  },\n  bus: {\n    icon: \"bus\",\n    color: \"#C83638\",\n  },\n  \"replacement-bus\": {\n    icon: \"bus\",\n    color: \"#C83638\",\n  },\n  coach: {\n    icon: \"bus-alt\",\n    color: \"#10bd59\",\n  },\n  \"national-rail\": {\n    icon: \"train\",\n    color: \"#043261\",\n  },\n  overground: {\n    icon: \"train\",\n    color: \"#E46B24\",\n  },\n  tube: {\n    icon: \"subway\",\n    color: \"#051EA6\",\n  },\n  tflrail: {\n    icon: \"train\",\n    color: \"#051EA6\",\n  },\n  dlr: {\n    icon: \"tram\",\n    color: \"#26AFAC\",\n  },\n};\n\nconst Wrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n  background-color: var(--color-white);\n  padding: 32px;\n  border-radius: 4px;\n`;\n\nconst Leg = styled.section`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Header = styled.section`\n  display: flex;\n  align-items: center;\n  margin-bottom: 8px;\n`;\n\nconst Footer = styled.section`\n  display: flex;\n  align-items: center;\n`;\n\nconst Content = styled.section`\n  display: flex;\n`;\n\nconst Point = styled.span`\n  font-size: 2rem;\n  margin-left: 4px;\n`;\n\nconst Stops = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-size: 1.6rem;\n  > div {\n    & + div {\n      margin-top: 16px;\n    }\n    &:last-of-type {\n      margin-bottom: 16px;\n    }\n  }\n`;\n\nconst Stop = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  &:before {\n    content: \"\";\n    display: block;\n    height: 4px;\n    width: 12px;\n    border-radius: 4px;\n    background-color: #4d4d4d;\n    background-color: ${({ color }) => color};\n    position: absolute;\n    top: 50%;\n    left: -4px;\n    margin-top: -2px;\n    margin-left: -15px;\n  }\n`;\n\nconst Direction = styled.div`\n  display: flex;\n  flex-direction: column;\n  display: relative;\n  position: relative;\n  &:before {\n    content: \"\";\n    display: block;\n    height: 4px;\n    width: 12px;\n    border-radius: 4px;\n    background-color: #4d4d4d;\n    position: absolute;\n    top: 50%;\n    left: -4px;\n    margin-top: -2px;\n    margin-left: -15px;\n  }\n  span {\n    &:first-child {\n      font-size: 18px;\n    }\n  }\n`;\n\nconst Summary = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-size: 1.8rem;\n  margin-bottom: 8px;\n`;\n\nconst VerticalLine = styled.div`\n  display: flex;\n  background-color: ${({ color }) => color};\n  width: 4px;\n  min-height: 32px;\n  border-radius: 4px;\n  margin-right: 18px;\n  margin-left: -2px;\n`;\n\nconst Duration = styled.div`\n  display: flex;\n  font-size: 1.6rem;\n  margin-bottom: 8px;\n  span {\n    &:first-of-type {\n      font-weight: bold;\n    }\n    & + span {\n      margin-left: 16px;\n    }\n  }\n`;\n\nconst Toggle = styled.span`\n  color: #28bcd4;\n  cursor: pointer;\n`;\n\nconst ModeIcon = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 32px;\n  height: 32px;\n  margin-left: -16px;\n`;\n\nconst Trip = ({ className, trip }) => {\n  const [legs, setLegs] = useState(trip.legs.map(() => ({ expanded: false })));\n\n  if (Object.keys(trip).length === 0) return null;\n\n  return (\n    <Wrapper className={className}>\n      {trip.legs.map((leg, i) => (\n        // eslint-disable-next-line react/no-array-index-key\n        <Leg key={i}>\n          <Header>\n            <ModeIcon>\n              <FontAwesomeIcon\n                icon={[\"fad\", MODE_COLOURS[leg.mode.id].icon]}\n                color={MODE_COLOURS[leg.mode.id].color}\n                size=\"2x\"\n              />\n            </ModeIcon>\n            <Point className=\"location-name\">{`${\n              leg.departurePoint.commonName\n            } at ${convertDateToTime(leg.departureTime)}`}</Point>\n          </Header>\n          <Content>\n            <VerticalLine color={MODE_COLOURS[leg.mode.id].color} />\n            <div>\n              <Summary>{leg.instruction.summary}</Summary>\n              <Duration>\n                <span>{leg.duration} min</span>\n                {leg.mode.id === \"walking\" && (\n                  <ToggleExpand\n                    legIndex={i}\n                    legStops={legs}\n                    setLegs={setLegs}\n                  />\n                )}\n                {(leg.mode.id === \"bus\" ||\n                  leg.mode.id === \"national-rail\" ||\n                  leg.mode.id === \"london-overground\" ||\n                  leg.mode.id === \"tube\") && (\n                  <Toggle\n                    onClick={() => {\n                      const updatedLegs = legs.map(({ expanded }, index) => ({\n                        expanded: i === index ? !expanded : expanded,\n                      }));\n                      setLegs(updatedLegs);\n                    }}\n                  >\n                    {`${legs[i].expanded ? \"Hide\" : \"Show\"} ${\n                      leg.path.stopPoints.length\n                    } stop${leg.path.stopPoints.length === 1 ? \"\" : \"s\"}`}\n                  </Toggle>\n                )}\n              </Duration>\n              {legs[i].expanded && (\n                <Stops>\n                  {leg.mode.id === \"walking\" &&\n                    leg.instruction.steps.map((\n                      step,\n                      i, // eslint-disable-line no-shadow\n                    ) => (\n                      // eslint-disable-next-line react/no-array-index-key\n                      <Direction key={i}>\n                        <span>{step.descriptionHeading}</span>\n                        <span>{step.description}</span>\n                      </Direction>\n                    ))}\n                  {(leg.mode.id === \"bus\" ||\n                    leg.mode.id === \"national-rail\" ||\n                    leg.mode.id === \"london-overground\" ||\n                    leg.mode.id === \"tube\") &&\n                    leg.path.stopPoints.map((\n                      stopPoint,\n                      i, // eslint-disable-line no-shadow\n                    ) => (\n                      // eslint-disable-next-line react/no-array-index-key\n                      <Stop key={i} color={MODE_COLOURS[leg.mode.id].color}>\n                        {\" \"}\n                        <span>{stopPoint.name}</span>\n                      </Stop>\n                    ))}\n                </Stops>\n              )}\n            </div>\n          </Content>\n        </Leg>\n      ))}\n      <Footer>\n        <ModeIcon>\n          <FontAwesomeIcon\n            icon={[\"fas\", \"map-marker-alt\"]}\n            color=\"var(--color-background)\"\n            size=\"2x\"\n          />\n        </ModeIcon>\n        <Point className=\"location-name\">{`${\n          trip.legs[trip.legs.length - 1].arrivalPoint.commonName\n        } at ${convertDateToTime(\n          trip.legs[trip.legs.length - 1].departureTime,\n        )}`}</Point>\n      </Footer>\n    </Wrapper>\n  );\n};\n\nTrip.defaultProps = {};\n\nTrip.propTypes = {\n  className: PropTypes.string.isRequired,\n  trip: PropTypes.shape({\n    legs: PropTypes.arrayOf(\n      PropTypes.shape({\n        mode: PropTypes.shape({\n          id: PropTypes.string,\n        }),\n        arrivalPoint: PropTypes.shape({\n          commonName: PropTypes.string,\n        }),\n        departureTime: PropTypes.string,\n      }),\n    ),\n  }).isRequired,\n};\n\nexport default Trip;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport GoogleMapReact from \"google-map-react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Wrapper = styled.section`\n  height: 100%;\n  width: 100%;\n  border-radius: 4px;\n  overflow: hidden;\n`;\n\nconst IconWrapper = styled.span`\n  position: absolute;\n  transform: translate(-50%, -100%);\n  z-index: 10;\n`;\n\nconst defaultProps = {\n  zoom: 11,\n};\n\nconst handleGoogleMapApi = (google, path) => {\n  const bounds = new google.maps.LatLngBounds();\n\n  const tripPath = new google.maps.Polyline({\n    path,\n    geodesic: true,\n    strokeColor: \"#00BCD4\",\n    strokeOpacity: 1,\n    strokeWeight: 5,\n  });\n\n  tripPath.setMap(google.map);\n\n  bounds.extend(path[0]);\n  bounds.extend(path[path.length - 1]);\n\n  google.map.fitBounds(bounds);\n};\n\nconst TripMap = ({ center, path }) => (\n  <Wrapper>\n    <GoogleMapReact\n      defaultCenter={center}\n      defaultZoom={defaultProps.zoom}\n      yesIWantToUseGoogleMapApiInternals\n      onGoogleApiLoaded={google => handleGoogleMapApi(google, path)}\n    >\n      <IconWrapper lat={path[0].lat} lng={path[0].lng}>\n        <FontAwesomeIcon\n          icon={[\"fas\", \"map-marker-alt\"]}\n          color=\"#31CC71\"\n          size=\"3x\"\n        />\n      </IconWrapper>\n      <IconWrapper\n        lat={path[path.length - 1].lat}\n        lng={path[path.length - 1].lng}\n      >\n        <FontAwesomeIcon\n          icon={[\"fas\", \"map-marker-alt\"]}\n          color=\"#00BCD4\"\n          size=\"3x\"\n        />\n      </IconWrapper>\n    </GoogleMapReact>\n  </Wrapper>\n);\n\nTripMap.propTypes = {\n  center: PropTypes.shape({\n    lat: PropTypes.number,\n    lng: PropTypes.number,\n  }).isRequired,\n  path: PropTypes.arrayOf(\n    PropTypes.shape({\n      lat: PropTypes.number,\n      lng: PropTypes.number,\n    }),\n  ).isRequired,\n};\n\nexport default TripMap;\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { clearSelectedTrip, clearJourney } from \"../redux/actions\";\nimport TripSummary from \"./TripSummary\";\nimport TripExpanded from \"./TripExpanded\";\nimport TripMap from \"./TripMap\";\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: auto 1fr;\n  grid-row-gap: 32px;\n  align-items: start;\n`;\n\nconst StyledTripSummary = styled(TripSummary)`\n  grid-column: 1 / -1;\n  grid-row: 1 / span 1;\n`;\n\nconst ContentWrap = styled.div`\n  grid-column: 1 / -1;\n  grid-row: 2 / -1;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-column-gap: 32px;\n`;\n\nconst StyledTripExpanded = styled(TripExpanded)`\n  grid-column: 1 / span 1;\n`;\n\nconst Trip = ({ selectedTrip, onClearSelectedTrip, onClearJourney }) => {\n  const history = useHistory();\n\n  const path =\n    selectedTrip.legs &&\n    selectedTrip.legs.map((leg, i) => {\n      if (i === selectedTrip.legs.length - 1) {\n        return {\n          lat: leg.arrivalPoint.lat,\n          lng: leg.arrivalPoint.lon,\n        };\n      }\n\n      return {\n        lat: leg.departurePoint.lat,\n        lng: leg.departurePoint.lon,\n      };\n    });\n\n  useEffect(() => {\n    return () => {\n      onClearSelectedTrip();\n      onClearJourney();\n    };\n  }, [onClearSelectedTrip, onClearJourney]);\n\n  if (Object.keys(selectedTrip).length === 0) {\n    history.push(\"/trip-planner\");\n    return null;\n  }\n\n  return (\n    <Wrapper>\n      <StyledTripSummary journey={selectedTrip} />\n      <ContentWrap>\n        <StyledTripExpanded trip={selectedTrip} />\n        <TripMap center={{ lat: 51.50853, lng: -0.12574 }} path={path} />\n      </ContentWrap>\n    </Wrapper>\n  );\n};\n\nconst mapStateToProps = ({ suggestion }) => ({\n  selectedTrip: suggestion.selected,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onClearSelectedTrip: () => dispatch(clearSelectedTrip()),\n  onClearJourney: () => dispatch(clearJourney()),\n});\n\nTrip.propTypes = {\n  selectedTrip: PropTypes.shape({\n    duration: PropTypes.number,\n    startDateTime: PropTypes.string,\n    arrivalDateTime: PropTypes.string,\n    legs: PropTypes.array,\n  }).isRequired,\n  onClearSelectedTrip: PropTypes.func.isRequired,\n  onClearJourney: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Trip);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport Status from \"./Status\";\nimport TripPlanner from \"./TripPlanner\";\nimport Trip from \"./Trip\";\n\nconst Wrapper = styled.main`\n  display: flex;\n  flex-direction: column;\n  padding: var(--spacing-large);\n`;\n\nconst Main = ({ selectedTrip }) => (\n  <Wrapper>\n    <Switch>\n      <Route exact path=\"/\">\n        <Status />\n      </Route>\n      <Route path=\"/trip-planner\">\n        <TripPlanner />\n      </Route>\n      <Route path=\"/trip\">\n        {selectedTrip ? <Trip /> : <Redirect to=\"/trip-planner\" />}\n      </Route>\n    </Switch>\n  </Wrapper>\n);\n\nconst mapStateToProps = ({ suggestion }) => ({\n  selectedTrip: suggestion.selected,\n});\n\nMain.defaultProps = {\n  selectedTrip: {},\n};\n\nMain.propTypes = {\n  selectedTrip: PropTypes.shape({\n    duration: PropTypes.number,\n    startDateTime: PropTypes.string,\n    arrivalDateTime: PropTypes.string,\n    legs: PropTypes.array,\n  }),\n};\n\nexport default connect(mapStateToProps)(Main);\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport {\n  faWalking,\n  faBicycle,\n  faBus,\n  faTrain,\n  faSubway,\n  faTram,\n  faShip,\n  faExclamationTriangle,\n  faRoute,\n  faSpinnerThird,\n  faChevronRight,\n  faCircle,\n  faBusAlt,\n} from \"@fortawesome/pro-duotone-svg-icons\";\nimport { faMapMarkerAlt } from \"@fortawesome/pro-solid-svg-icons\";\nimport store from \"../redux/store\";\nimport GlobalStyle from \"../GlobalStyle\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Main from \"./Main\";\n\nlibrary.add(\n  fab,\n  faWalking,\n  faBicycle,\n  faBus,\n  faBusAlt,\n  faTrain,\n  faSubway,\n  faTram,\n  faShip,\n  faMapMarkerAlt,\n  faExclamationTriangle,\n  faRoute,\n  faSpinnerThird,\n  faChevronRight,\n  faCircle,\n);\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: auto 1fr;\n  background-color: var(--color-background);\n  min-height: 100vh;\n`;\n\nconst App = () => (\n  <Provider store={store}>\n    <GlobalStyle />\n    <Container>\n      <Router>\n        <Header />\n        <Main />\n        <Footer />\n      </Router>\n    </Container>\n  </Provider>\n);\n\nexport default App;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./components/App\";\n\nconst app = <App />;\n\nrender(app, document.querySelector(\"#app\"));\n"],"sourceRoot":""}